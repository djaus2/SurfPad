<VisualMicro>
  <Program Name="ArduinoEchoSketch" Ext=".ino" Location="C:\Users\DavidJones\source\repos\SurfPad\ArduinoEchoSketch">
    <Compile IsDebugStart="1" IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\DavidJones\AppData\Local\Temp\VMBuilds\ArduinoEchoSketch\uno\Debug" ReCompileIfSourceIsNewer="1" SketchName="ArduinoEchoSketch" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 33;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE_NET_UDP 16;VM_DEBUGGER_TYPE_USBAPI 17;VM_DEBUGGER_TYPE_SERIALUSB 18;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="uno" Description="Arduino/Genuino Uno" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="M:\Users\DavidJones\Documents\Arduino" name="Arduino/Genuino Uno" vid.0="0x2341" pid.0="0x0043" vid.1="0x2341" pid.1="0x0001" vid.2="0x2A03" pid.2="0x0043" vid.3="0x2341" pid.3="0x0243" upload.tool="avrdude" upload.protocol="arduino" upload.maximum_size="32256" upload.maximum_data_size="2048" upload.speed="115200" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xDE" bootloader.extended_fuses="0xFD" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" bootloader.file="optiboot/optiboot_atmega328.hex" build.mcu="atmega328p" build.f_cpu="16000000L" build.board="AVR_UNO" build.core="arduino" build.variant="standard" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\system" runtime.ide.version="10805" target_package="arduino" target_platform="avr" runtime.hardware.path="C:\Program Files (x86)\Arduino\hardware\arduino" originalid="uno" intellisense.tools.path="{runtime.tools.avr-gcc.path}\" intellisense.include.paths="{intellisense.tools.path}avr\include\;{intellisense.tools.path}avr\include\avr\;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}&quot;" version="1.6.20" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects" compiler.c.elf.flags="{compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -flto -MMD" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto" compiler.ar.cmd="avr-gcc-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.verify="" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} &quot;-P{serial.port}&quot; -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.verify="" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port {upload.network.port} -sketch &quot;{build.path}/{build.project_name}.hex&quot; -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\xaohtdp2.q2m\Micro Platforms\arduino16x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" arduinoisporg.name="ArduinoISP.org" arduinoisporg.protocol="arduinoisporg" arduinoisporg.program.tool="avrdude" arduinoisporg.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" jtag3isp.name="Atmel JTAGICE3 (ISP mode)" jtag3isp.communication="usb" jtag3isp.protocol="jtag3isp" jtag3isp.program.protocol="jtag3isp" jtag3isp.program.tool="avrdude" jtag3isp.program.extra_params="" jtag3.name="Atmel JTAGICE3 (JTAG mode)" jtag3.communication="usb" jtag3.protocol="jtag3" jtag3.program.protocol="jtag3" jtag3.program.tool="avrdude" jtag3.program.extra_params="-B0.1" atmel_ice.name="Atmel-ICE (AVR)" atmel_ice.communication="usb" atmel_ice.protocol="atmelice_isp" atmel_ice.program.protocol="atmelice_isp" atmel_ice.program.tool="avrdude" atmel_ice.program.extra_params="-Pusb" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.9.2-atmel3.5.4-arduino2.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.tools-avr.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.3.0-arduino9.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arduinoOTA.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arduinoOTA-1.1.1.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.vm.boardinfo.id="uno" runtime.vm.boardinfo.name="uno" runtime.vm.boardinfo.desc="Arduino/Genuino Uno" runtime.vm.boardinfo.src_location="C:\Program Files (x86)\Arduino\hardware\arduino\avr" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.9.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="Arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.builder.exe="arduinobuilder.exe" ide.builder.name="Arduino Builder" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" ide.appid="arduino16x" location.sketchbook="M:\Users\DavidJones\Documents\Arduino" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr" build.core.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" runtime.platform.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.platformname.name="avr" build.arch="AVR" builder.noino="false" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" build.variant.vmresolved.name="standard" build.variant.vmresolved.full_path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" serial.port.file="COM7" serial.port="COM7" serial.port.num="7" extra.time.local="1518459510" extra.time.utc="1518419910" extra.time.dst="39600" extra.time.zone="-39600" serial.port.caption="COM7   - USB Serial Device" serial.Caption="USB Serial Device (COM7)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_02" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="USB Serial Device" serial.DeviceID="USB\VID_26BA&amp;PID_0003\5543830353935161A112" serial.HardwareID.value0="USB\VID_26BA&amp;PID_0003" serial.Manufacturer="Microsoft" serial.Name="USB Serial Device (COM7)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_26BA&amp;PID_0003\5543830353935161A112" serial.Present="True" serial.Service="usbser" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="DESKTOP-GCCKFIE" serial.vid="0x26BA" serial.pid="0x0003" serial.iserial="5543830353935161A112" serial.port.iserial="5543830353935161A112" build.path="C:\Users\DavidJones\AppData\Local\Temp\VMBuilds\ArduinoEchoSketch\uno\Debug" build.project_name="ArduinoEchoSketch.ino" build.project_path="C:\Users\DavidJones\source\repos\SurfPad\ArduinoEchoSketch" ProjectDir="C:\Users\DavidJones\source\repos\SurfPad\ArduinoEchoSketch\" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\DavidJones\AppData\Local\Temp\VMBuilds\ArduinoEchoSketch\uno\Debug" />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" InBreakLiveView="1" PerfStats="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="9600" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="BluetoothSerialTerminal.xaml.cs, line 500 character 29" Id="7e8a5f01-efc2-4f71-8458-1feed8b54602" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\bluetoothserialterminal.xaml.cs" FileLine="500" FileColumn="29" FunctionName="Bluetooth.BluetoothSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="88" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='7e8a5f01-efc2-4f71-8458-1feed8b54602'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>493	                    }
494	                    else if (_Mode == Mode.JsonConfig)
495	                    {
496	                        recvdtxt += currenbtRecvdText;
497	                        if (recvdtxt.Substring(recvdtxt.Length - 1) == EOStringStr)
498	                        {
499	                            System.Diagnostics.Debug.WriteLine("Recvd: " + recvdtxt);
--&gt;500	                            await MainPage.MP.UpdateTextAsync(recvdtxt);//.Substring(0,recvdtxt.Length - 1))
501	
502	                            if (recvdtxt.Substring(0, "{\"Config\":".Length) == "{\"Config\":")
503	                                SendCh('~');
504	                            else if (recvdtxt.Substring(0, "{\"MainMenu\":".Length) == "{\"MainMenu\":")
505	                                _Mode = Mode.Connected;
506	                            else
507	                            {
508	                                //// Get stack trace for the exception with source file information
509	                                //var st = new StackTrace(ex, true);
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="BluetoothSerialTerminal.xaml.cs, line 503 character 33" Id="38ace9d1-63e5-45dc-b4b5-23b91da53afc" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\bluetoothserialterminal.xaml.cs" FileLine="503" FileColumn="33" FunctionName="Bluetooth.BluetoothSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="91" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='38ace9d1-63e5-45dc-b4b5-23b91da53afc'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>496	                        recvdtxt += currenbtRecvdText;
497	                        if (recvdtxt.Substring(recvdtxt.Length - 1) == EOStringStr)
498	                        {
499	                            System.Diagnostics.Debug.WriteLine("Recvd: " + recvdtxt);
500	                            await MainPage.MP.UpdateTextAsync(recvdtxt);//.Substring(0,recvdtxt.Length - 1))
501	
502	                            if (recvdtxt.Substring(0, "{\"Config\":".Length) == "{\"Config\":")
--&gt;503	                                SendCh('~');
504	                            else if (recvdtxt.Substring(0, "{\"MainMenu\":".Length) == "{\"MainMenu\":")
505	                                _Mode = Mode.Connected;
506	                            else
507	                            {
508	                                //// Get stack trace for the exception with source file information
509	                                //var st = new StackTrace(ex, true);
510	                                //string thisFile = new System.Diagnostics.StackTrace(true).GetFrame(0).GetFileName();
511	                                //var frame = st.GetFrame(0);
512	                                //// Get the line number from the stack frame
</Source>
      </BreakPoint>
      <BreakPoint Index="3" Name="BluetoothSerialTerminal.xaml.cs, line 505 character 33" Id="cf3ebddd-8a6f-46a0-b6ff-e26f332ab35e" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\bluetoothserialterminal.xaml.cs" FileLine="505" FileColumn="33" FunctionName="Bluetooth.BluetoothSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="93" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='cf3ebddd-8a6f-46a0-b6ff-e26f332ab35e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>498	                        {
499	                            System.Diagnostics.Debug.WriteLine("Recvd: " + recvdtxt);
500	                            await MainPage.MP.UpdateTextAsync(recvdtxt);//.Substring(0,recvdtxt.Length - 1))
501	
502	                            if (recvdtxt.Substring(0, "{\"Config\":".Length) == "{\"Config\":")
503	                                SendCh('~');
504	                            else if (recvdtxt.Substring(0, "{\"MainMenu\":".Length) == "{\"MainMenu\":")
--&gt;505	                                _Mode = Mode.Connected;
506	                            else
507	                            {
508	                                //// Get stack trace for the exception with source file information
509	                                //var st = new StackTrace(ex, true);
510	                                //string thisFile = new System.Diagnostics.StackTrace(true).GetFrame(0).GetFileName();
511	                                //var frame = st.GetFrame(0);
512	                                //// Get the line number from the stack frame
513	                                //var line = frame.GetFileLineNumber();
514	                                throw new System.Exception("BluetoothSerialTerminal.cs: ReadAsync() Getting JsonConfig. Shouldn't have reached this LOC"); //: { 0 }",line);
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="BluetoothSerialTerminal.xaml.cs, line 517 character 29" Id="1214f756-49b2-432a-a33c-9d7f6a5f46ec" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\bluetoothserialterminal.xaml.cs" FileLine="517" FileColumn="29" FunctionName="Bluetooth.BluetoothSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="105" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='1214f756-49b2-432a-a33c-9d7f6a5f46ec'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>510	                                //string thisFile = new System.Diagnostics.StackTrace(true).GetFrame(0).GetFileName();
511	                                //var frame = st.GetFrame(0);
512	                                //// Get the line number from the stack frame
513	                                //var line = frame.GetFileLineNumber();
514	                                throw new System.Exception("BluetoothSerialTerminal.cs: ReadAsync() Getting JsonConfig. Shouldn't have reached this LOC"); //: { 0 }",line);
515	
516	                            }
--&gt;517	                            recvdtxt = "";
518	                        }
519	                        else
520	                            return;
521	                    }
522	
523	                }
524	                catch (Exception ex)
525	                {
526	                    System.Diagnostics.Debug.WriteLine("ReadAsync: " + ex.Message);
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="USBSerialTerminal.xaml.cs, line 671 character 29" Id="e2b70bcd-f1e8-4128-a824-6634e183a7df" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\usbserialterminal.xaml.cs" FileLine="671" FileColumn="29" FunctionName="USBSerial.USBSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="52" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='e2b70bcd-f1e8-4128-a824-6634e183a7df'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>664	                    recvdText.Text = currenbtRecvdText;
665	
666	                    if (_Mode == Mode.JustConnected)
667	                    {
668	                        if (cFineStructure == bytes[0])
669	                        {
670	                            SendCh('0');
--&gt;671	                            _Mode=Mode.ACK0;
672	                        }
673	                    }
674	                    else if (_Mode == Mode.ACK0)
675	                    {
676	                        if ('1' == (char)bytes[0])
677	                        {
678	                            recvdtxt = "";
679	                            SendCh('2');
680	                            _Mode = Mode.ACK2;
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="USBSerialTerminal.xaml.cs, line 680 character 29" Id="7cd1c6ce-5eb8-4367-aae4-705016a4510d" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\usbserialterminal.xaml.cs" FileLine="680" FileColumn="29" FunctionName="USBSerial.USBSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="61" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='7cd1c6ce-5eb8-4367-aae4-705016a4510d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>673	                    }
674	                    else if (_Mode == Mode.ACK0)
675	                    {
676	                        if ('1' == (char)bytes[0])
677	                        {
678	                            recvdtxt = "";
679	                            SendCh('2');
--&gt;680	                            _Mode = Mode.ACK2;
681	                        }
682	                    }
683	                    else if (_Mode == Mode.ACK2)
684	                    {
685	                        if ('3' == (char)bytes[0])
686	                        {
687	                            recvdtxt = "";
688	                            SendCh('4');
689	                            _Mode = Mode.ACK4;
</Source>
      </BreakPoint>
      <BreakPoint Index="7" Name="USBSerialTerminal.xaml.cs, line 689 character 29" Id="0202c2ee-8ff9-4f67-8c20-81f4490ed17d" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\usbserialterminal.xaml.cs" FileLine="689" FileColumn="29" FunctionName="USBSerial.USBSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="70" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='0202c2ee-8ff9-4f67-8c20-81f4490ed17d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>682	                    }
683	                    else if (_Mode == Mode.ACK2)
684	                    {
685	                        if ('3' == (char)bytes[0])
686	                        {
687	                            recvdtxt = "";
688	                            SendCh('4');
--&gt;689	                            _Mode = Mode.ACK4;
690	                        }
691	                    }
692	                    else if (_Mode == Mode.ACK4)
693	                    {
694	                        if ('5' == (char)bytes[0])
695	                        {
696	                            status.Text="Ready for Config. Press [Back] then on MainPage press [Load App Menu]";
697	                            _Mode = Mode.Connected;
698	
</Source>
      </BreakPoint>
      <BreakPoint Index="8" Name="USBSerialTerminal.xaml.cs, line 697 character 29" Id="b22626a9-d051-414c-adf1-5bcb2e7712db" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\usbserialterminal.xaml.cs" FileLine="697" FileColumn="29" FunctionName="USBSerial.USBSerialTerminalPage.ReadAsync(CancellationToken cancellationToken)" FunctionLineOffset="78" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='b22626a9-d051-414c-adf1-5bcb2e7712db'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>690	                        }
691	                    }
692	                    else if (_Mode == Mode.ACK4)
693	                    {
694	                        if ('5' == (char)bytes[0])
695	                        {
696	                            status.Text="Ready for Config. Press [Back] then on MainPage press [Load App Menu]";
--&gt;697	                            _Mode = Mode.Connected;
698	
699	                        }
700	                    }
701	                    else if (_Mode == Mode.Connected)
702	                    {
703	                        byte byt = bytes[0];
704	                        switch (byt)
705	                        {
706	                            case 47:  //'!'
</Source>
      </BreakPoint>
      <BreakPoint Index="9" Name="MainPage.xaml.cs, line 351 character 13" Id="a4430c29-a58d-42c4-ab01-326bb1ea81cf" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\sillystixstreamsocket\mainpage.xaml.cs" FileLine="351" FileColumn="13" FunctionName="SoxStreams.MainPage.SocketListenerSvr_ListenerConnection(char command, string param)" FunctionLineOffset="3" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='a4430c29-a58d-42c4-ab01-326bb1ea81cf'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>344	                if (SocketListenerSvr != null)
345	                    SocketListenerSvr.StartListener();
346	            }
347	        }
348	
349	        private void SocketListenerSvr_ListenerConnection(char command, string param)
350	        {
--&gt;351	            Log =
352	                string.Format("(MainPage)Listener Connection Event Occurred Command: '{0}' Param: \"{1}\".", command, param);
353	        }
354	
355	        private async void SendAction(string action)
356	        {
357	            if (SocketSend_ClientToLister == null)
358	            {
359	                SocketSend_ClientToLister = SocketSend_ClientToListner.CreateNew(Passkey);
360	            }
</Source>
      </BreakPoint>
      <BreakPoint Index="10" Name="MainPage.xaml.cs, line 339 character 17" Id="54cefde2-e001-466b-9a17-033983bd4ecf" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\sillystixstreamsocket\mainpage.xaml.cs" FileLine="339" FileColumn="17" FunctionName="SoxStreams.MainPage.StartAndConnectSocket()" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='54cefde2-e001-466b-9a17-033983bd4ecf'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>332	                if (SocketClient == null)
333	                    SocketClient =  SocketClient.CreateNew(RemoteSocketListenerSvrName, Port, BindToAny, Passkey);
334	                if(SocketClient != null)
335	                    await (SocketClient.ConnectSocket());
336	            }
337	            else
338	            {
--&gt;339	                if (SocketListenerSvr == null)
340	                {
341	                    SocketListenerSvr = SocketListenerSvr.CreateNew(RemoteSocketListenerSvrName, Port, BindToAny, Passkey);
342	                    SocketListenerSvr.ListenerConnection += SocketListenerSvr_ListenerConnection;
343	                }
344	                if (SocketListenerSvr != null)
345	                    SocketListenerSvr.StartListener();
346	            }
347	        }
348	
</Source>
      </BreakPoint>
      <BreakPoint Index="11" Name="SynchronousSocket.cs, line 27 character 17" Id="abcb123a-dcd7-46bc-b475-6072b3e4881b" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\helpers\synchronoussocket.cs" FileLine="27" FileColumn="17" FunctionName="roundedbox.Helpers.SynchronousSocketListener.StartClient()" FunctionLineOffset="6" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='abcb123a-dcd7-46bc-b475-6072b3e4881b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>20	        private static Windows.Networking.Sockets.StreamSocket streamSocket = null;
21	
22	        public  static async Task StartClient()
23	        {
24	            try
25	            {
26	                // Create the StreamSocket and establish a connection to the echo server.
--&gt;27	                streamSocket = new Windows.Networking.Sockets.StreamSocket();
28	        
29	                // The server hostname that we will be establishing a connection to. In this example, the server and client are in the same process.
30	                var hostName = new Windows.Networking.HostName("192.168.0.137");
31	
32	                MainPage.MP.clientListBox.Items.Add("client is trying to connect...");
33	
34	                await streamSocket.ConnectAsync(hostName, "1234");
35	
36	                MainPage.MP.clientListBox.Items.Add("client connected");
</Source>
      </BreakPoint>
      <BreakPoint Index="12" Name="SocketTerminal.xaml.cs, line 319 character 26" Id="851f3088-3edb-42b0-ba29-ea1457ec476e" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\socketterminal.xaml.cs" FileLine="319" FileColumn="26" FunctionName="Socket.SocketTerminalPage.StartSocketClient2()" FunctionLineOffset="9" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='851f3088-3edb-42b0-ba29-ea1457ec476e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>312	        {
313	            string json1 = "";
314	            string json2 = "";
315	            char[] chars = new char[2];
316	            try
317	            {
318	
--&gt;319	                //using (Stream outputStream = streamSocket.OutputStream.AsStreamForWrite())
320	                //{
321	                //    using (var streamWriter = new StreamWriter(outputStream))
322	                //    {
323	
324	                //        using (Stream inputStream = streamSocket.InputStream.AsStreamForRead())
325	                //        {
326	                //            using (StreamReader streamReader = new StreamReader(inputStream))
327	                //            {
328	
</Source>
      </BreakPoint>
      <BreakPoint Index="13" Name="SocketTerminal.xaml.cs, line 330 character 17" Id="dada3190-1b02-4f37-8a6d-a2190fd17249" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\socketterminal.xaml.cs" FileLine="330" FileColumn="17" FunctionName="Socket.SocketTerminalPage.StartSocketClient2()" FunctionLineOffset="20" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='dada3190-1b02-4f37-8a6d-a2190fd17249'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>323	
324	                //        using (Stream inputStream = streamSocket.InputStream.AsStreamForRead())
325	                //        {
326	                //            using (StreamReader streamReader = new StreamReader(inputStream))
327	                //            {
328	
329	
--&gt;330	                int responseLength = await streamReader.ReadAsync(chars, 0, 1);
331	                if (chars[0] == '/')
332	                {
333	                    await streamWriter.WriteAsync('/');
334	                    await streamWriter.FlushAsync();
335	
336	                    json1 = await streamReader.ReadLineAsync();
337	
338	
339	                    await streamWriter.WriteAsync('~');
</Source>
      </BreakPoint>
      <BreakPoint Index="14" Name="SocketTerminal.xaml.cs, line 384 character 13" Id="61d2dc36-360e-4f11-b690-10f4eb2dff61" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\davidjones\source\repos\surfpad\roundedbox\pages\socketterminal.xaml.cs" FileLine="384" FileColumn="13" FunctionName="Socket.SocketTerminalPage.Send(string request)" FunctionLineOffset="4" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C#" LocationType="3" Tag="&lt;vmbp Id='61d2dc36-360e-4f11-b690-10f4eb2dff61'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>377	                MainPage.MP.clientListBox.Items.Add(webErrorStatus.ToString() != "Unknown" ? webErrorStatus.ToString() : ex.Message);
378	            }
379	        }
380	
381	        public async Task Send(string request)
382	        {
383	            try
--&gt;384	            {
385	                await streamWriter.WriteLineAsync(request);
386	                await streamWriter.FlushAsync();
387	            }
388	            catch (Exception ex)
389	            {
390	                Windows.Networking.Sockets.SocketErrorStatus webErrorStatus = Windows.Networking.Sockets.SocketError.GetStatus(ex.GetBaseException().HResult);
391	                MainPage.MP.clientListBox.Items.Add(webErrorStatus.ToString() != "Unknown" ? webErrorStatus.ToString() : ex.Message);
392	            }
393	        }
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>